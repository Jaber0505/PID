# Generated by Django 5.2.1 on 2025-05-19 15:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=30, verbose_name='Type de tarif')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant (€)')),
                ('description', models.CharField(max_length=255, verbose_name='Description')),
                ('start_date', models.DateField(verbose_name='Début de validité')),
                ('end_date', models.DateField(verbose_name='Fin de validité')),
            ],
            options={
                'verbose_name': 'Tarif',
                'verbose_name_plural': 'Tarifs',
                'db_table': 'prices',
                'ordering': ['price'],
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
            ],
            options={
                'verbose_name': 'Type',
                'verbose_name_plural': 'Types',
                'db_table': 'types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postal_code', models.CharField(max_length=10, verbose_name='Code postal')),
                ('locality', models.CharField(max_length=100, verbose_name='Localité')),
            ],
            options={
                'verbose_name': 'Localité',
                'verbose_name_plural': 'Localités',
                'db_table': 'localities',
                'ordering': ['postal_code', 'locality'],
                'unique_together': {('postal_code', 'locality')},
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=100, verbose_name='Désignation')),
                ('street', models.CharField(max_length=100, verbose_name='Rue')),
                ('number', models.CharField(max_length=10, verbose_name='Numéro')),
                ('locality', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='locations', to='catalogue.locality', verbose_name='Localité')),
            ],
            options={
                'verbose_name': 'Lieu',
                'verbose_name_plural': 'Lieux',
                'db_table': 'locations',
                'ordering': ['designation'],
            },
        ),
        migrations.CreateModel(
            name='Representation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', models.DateTimeField(help_text='Horaire de la représentation', verbose_name='Date et heure')),
                ('capacity', models.PositiveIntegerField(help_text='Nombre total de places disponibles pour cette représentation', verbose_name='Capacité maximale')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='representations', to='catalogue.location', verbose_name='Lieu')),
            ],
            options={
                'verbose_name': 'Représentation',
                'verbose_name_plural': 'Représentations',
                'db_table': 'representations',
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_date', models.DateTimeField(auto_now_add=True, verbose_name='Date de réservation')),
                ('status', models.CharField(choices=[('ouverte', 'Ouverte'), ('complète', 'Complète'), ('expirée', 'Expirée')], default='ouverte', max_length=10, verbose_name='Statut')),
                ('representation', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='reservations', to='catalogue.representation', verbose_name='Représentation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='reservations', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Réservation',
                'verbose_name_plural': 'Réservations',
                'db_table': 'reservations',
                'ordering': ['-booking_date'],
                'unique_together': {('user', 'representation')},
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], verbose_name='Note')),
                ('comment', models.TextField(blank=True, verbose_name='Commentaire')),
                ('representation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='catalogue.representation', verbose_name='Représentation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Avis',
                'verbose_name_plural': 'Avis',
                'db_table': 'reviews',
                'ordering': ['-representation__when'],
            },
        ),
        migrations.CreateModel(
            name='Show',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre du spectacle')),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('prices', models.ManyToManyField(related_name='shows', to='catalogue.price', verbose_name='Tarifs')),
            ],
            options={
                'verbose_name': 'Spectacle',
                'verbose_name_plural': 'Spectacles',
                'db_table': 'shows',
                'ordering': ['title'],
            },
        ),
        migrations.AddField(
            model_name='representation',
            name='show',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='representations', to='catalogue.show', verbose_name='Spectacle'),
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=100, verbose_name='Nom')),
                ('types', models.ManyToManyField(blank=True, related_name='artists', to='catalogue.type', verbose_name="Types d'artiste")),
            ],
            options={
                'verbose_name': 'Artiste',
                'verbose_name_plural': 'Artistes',
                'db_table': 'artists',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='ReservationItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Quantité')),
                ('price', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='reservation_items', to='catalogue.price', verbose_name='Tarif')),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='catalogue.reservation', verbose_name='Réservation')),
            ],
            options={
                'verbose_name': 'Ligne de réservation',
                'verbose_name_plural': 'Lignes de réservation',
                'db_table': 'reservation_items',
                'unique_together': {('reservation', 'price')},
            },
        ),
        migrations.AddConstraint(
            model_name='representation',
            constraint=models.UniqueConstraint(fields=('show', 'when'), name='unique_show_when'),
        ),
    ]
